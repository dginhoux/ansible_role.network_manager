{% set role_name = role_meta_vars['galaxy_info']['role_name'] -%}
{% set role_author = role_meta_vars['galaxy_info']['author'] -%}
{% set role_company = role_meta_vars['galaxy_info']['company'] -%}
{% set repo_prefix = "ansible_role" -%}
{% set repo_branch = "master" -%}
{% set repo_name = repo_prefix ~ "." ~ role_name -%}
{% set repo_url = "https://github.com/" ~ role_company ~ "/" ~ repo_name -%}



# :computer: ROLE {{ role_company }}.{{ role_name }}
{#
{% if role_meta_vars['galaxy_info']['galaxy_tags'] is defined and role_meta_vars['galaxy_info']['galaxy_tags']|length() %}
  `{% for tag in role_meta_vars['galaxy_info']['galaxy_tags'] %}
  {{ tag }} 
  {% endfor %}`
{% endif %}
#}

## :scroll: DESCRIPTION

{{ role_meta_vars['galaxy_info']['description'] }}


## :nut_and_bolt: REQUIREMENTS

#### SUPPORTED PLATFORMS

{% if role_meta_vars['galaxy_info']['platforms'] is defined and role_meta_vars['galaxy_info']['platforms']|length() %}
This role require a supported platform. 
It will skip node with unsupported platform to avoid any compatibility problem.
This behaviour can be bypassed by settings this variable `asserts_bypass=True`.

| Platform | Versions |
|----------|----------|
  {% for platform in role_meta_vars['galaxy_info']['platforms'] %}
| {{ platform['name'] }} | {{  platform['versions']|join(', ') }} |
  {% endfor %}
{% else %}
Not defined
{% endif %}


#### ANSIBLE VERSION

Ansible >= {{ role_meta_vars['galaxy_info']['min_ansible_version'] }}


#### DEPENDENCIES

{% if role_meta_vars['dependencies'] is defined and role_meta_vars['dependencies']|length() %}
  {% for dependencie in role_meta_vars['dependencies'] %}
  * {{ dependencie }}
  {% endfor %}
{% else %}
None.
{% endif %}


## :inbox_tray: INSTALLATION

#### ANSIBLE GALAXY

```shell
ansible-galaxy install {{ role_company }}.{{ role_name }}
```

#### GIT

```shell
git clone {{ repo_url }} {{ role_company }}.{{ role_name }}
```


## :rocket: USAGE

#### EXAMPLE PLAYBOOK

```yaml
- hosts: all
  roles:
    - name: start role {{ role_company }}.{{ role_name }}
      ansible.builtin.include_role:
        name: {{ role_company }}.{{ role_name }}
{% if role_defaults_files |length > 0 and role_defaults_files[0]['content'] is not none %}
      vars:
  {% for string_role_defaults_file in string_role_defaults_files %}
        {{ string_role_defaults_file['content'] | replace ('\n', '\n        ') }}
  {% endfor %}
{% endif %}
```


{# role vars #}
{% if role_vars_files is not none or role_defaults_files is not none or role_spec_vars is not none %}
## :factory: VARIABLES
{#
Variables are divided in three types.

The **default vars** section shows you which variables you may
override in your ansible inventory. As a matter of fact, all variables should
be defined there for explicitness, ease of documentation as well as overall
role manageability.

The **context variables** are shown in section below hint you
on how runtime context may affects role execution.
#}
  {% if role_defaults_files is not none or role_spec_vars is not none %}
#### DEFAULT VARIABLES
    {% if role_spec_vars is not none %}
      {% for name,specs in role_spec_vars.items() %}

#### {{ name }}

      {% if 'short_description' in specs %}
{{ specs['short_description'] }}
      {% elif 'description' in specs %}
{{ specs['description'] }}
      {% endif %}

| Variable Name | Required | Type | Default | Elements | Description |
|---------------|----------|------|---------|----------|-------------|
        {% for name,option in specs['options'].items() %}
| {{ name }} | {{ option['required'] if 'required' in option else False }} | {{ option['type'] }} | {{ option['default']|safe|replace('|',' \|')|replace('\n','<br>') if 'default' in option }} | {{ option['elements'] if 'elements' in option }} | {{ option['description'] if 'description' in option }} |
        {% endfor %}
      {% endfor %}
    {% else %}
      {% for role_defaults_file in role_defaults_files %}
Role default variables from `defaults/{{role_defaults_file['filename']}}` : 

        {% if role_defaults_file['content'] != None %}
| Variable Name | Value |
|---------------|-------|
          {% for key, value in role_defaults_file['content'].items() %}
|{{ key }} | <pre> {{ value | replace('|',' \|') | replace('\n','<br>') }} </pre> |
          {% endfor %}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endif %}


#### CONTEXT VARIABLES

{% if role_vars_files != [] %}
Those variables are located in `vars/*.yml` are used to handle OS differences ; One of theses is loaded dynamically during role
runtime using the `include_vars` module and set OS specifics variable's.
  {% for role_vars_file in role_vars_files %}

    {% if role_vars_file['content'] != None %}
Variables loaded from `vars/{{role_vars_file['filename']}}` : 

| Variable Name | Value |
|---------------|-------|
      {% for key,value in role_vars_file['content'].items() %}
| {{ key }} | {{ value|safe | replace('|',' \|')|replace('\n','<br>') }} |
      {% endfor %}
    {% endif %}
  {% endfor %}
  {% else %}
None.
  {% endif %}
{% endif %}

{% if role_meta_vars['galaxy_info']['license'] is defined %}
{# usage guide // doc from md files #}
  {% if role_docs_md_files is not none %}
    {% for role_docs_md_file in role_docs_md_files %}
      {% if 'README' not in role_docs_md_file['filename'] %}
{{role_docs_md_file['content']}}
      {% endif %}
      {% if loop.length > 1 %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endif %}



## :man: AUTHOR

[![Author](https://img.shields.io/badge/maintained%20by-{{ role_company }}-e00000?style=flat-square)](https://github.com/{{ role_company }})


## :bookmark_tabs: LICENSE

[![License](https://img.shields.io/github/license/{{ role_company }}/{{ repo_name }}?style=flat-square)](https://github.com/{{ role_company }}/{{ repo_name }}/blob/{{ repo_branch }}/LICENSE)
