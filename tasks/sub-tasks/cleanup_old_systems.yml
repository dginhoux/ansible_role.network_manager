---
- name: cleanup default debian network configuration
  when: ansible_os_family == "Debian"
  block:
    - name: identify /etc/network/interfaces.d/* for cleanup
      register: netcfg_files_to_delete
      ansible.builtin.find:
        paths: /etc/network/interfaces.d
        patterns: "*"

    - name: cleanup /etc/network/interfaces.d/*
      with_items: "{{ netcfg_files_to_delete.files }}"
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent

    - name: create default /etc/network/interfaces
      ansible.builtin.copy:
        dest: "/etc/network/interfaces"
        content: |
          # ansible_managed
          auto lo
          iface lo inet loopback
          source /etc/network/interfaces.d/*


- name: cleanup default redhat network configuration
  when: ansible_os_family == "RedHat"
  block:
    - name: identify /etc/network/interfaces.d/ifcfg-* for cleanup
      register: ifcfg_files_to_delete
      ansible.builtin.find:
        paths: /etc/sysconfig/network-scripts
        patterns: "ifcfg-*"

    - name: cleanup /etc/network/interfaces.d/ifcfg-*
      with_items: "{{ ifcfg_files_to_delete.files }}"
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent

    - name: identify /etc/network/interfaces.d/route-* for cleanup
      register: route_files_to_delete
      ansible.builtin.find:
        paths: /etc/sysconfig/network-scripts
        patterns: "route-*"

    - name: cleanup /etc/network/interfaces.d/route-*
      with_items: "{{ route_files_to_delete.files }}"
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent

    - name: create default /etc/sysconfig/network
      ansible.builtin.copy:
        dest: "/etc/sysconfig/network"
        content: |
          # ansible_managed
          NETWORKING=yes
          HOSTNAME={{ inventory_hostname }}
          NOZEROCONF=yes
