---

- name: generate config
  block:
    - name: load task for packages
      ansible.builtin.include_tasks:
        file: tasks/sub-tasks/packages.yml

    - name: load task for clean old conf systems
      ansible.builtin.include_tasks:
        file: tasks/sub-tasks/cleanup_old_systems.yml
      when: network_manager_cleanup_old_systems | bool

    - name: start and enable service
      ansible.builtin.service:
        name: "{{ network_manager_service_name }}"
        state: started
        enabled: true

    - name: load task for config
      ansible.builtin.include_tasks:
        file: tasks/sub-tasks/config.yml

    - name: load tasks for delete nm connection
      ansible.builtin.include_tasks:
        file: tasks/sub-tasks/delete_nm_connections.yml
      loop: "{{ network_manager_connections | flatten }}"
      loop_control:
        loop_var: conn
      when: >
        network_manager_connections is iterable
        and
        network_manager_connections | length > 0
        and
        conn.state == "absent"

    - name: load tasks for create nm connection
      ansible.builtin.include_tasks:
        file: tasks/sub-tasks/create_nm_connections.yml
      loop: "{{ network_manager_connections | flatten }}"
      loop_control:
        loop_var: conn
      when: >
        network_manager_connections is iterable
        and
        network_manager_connections | length > 0
        and
        conn.state == "present"
  when: >
    network_manager_configure is defined
    and
    network_manager_configure == "generate"


- name: cleanup config
  block:
    - name: load task for clean conf nm
      ansible.builtin.include_tasks:
        file: tasks/sub-tasks/cleanup_old_nm.yml

    - name: stop and disable service
      ansible.builtin.service:
        name: "{{ network_manager_service_name }}"
        state: stopped
        enabled: false
  when: >
    network_manager_configure is defined
    and
    network_manager_configure == "cleanup"
